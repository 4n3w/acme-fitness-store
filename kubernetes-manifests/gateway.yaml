apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGateway
metadata:
  name: gateway-acme
spec:
  api:
    serverUrl: http://gateway-acme.spring.animalrescue.online
    title: "ACME Fitness Gateway"
    description: "ACME Fitness application for Spring Cloud Gateway commercial product demos."
    documentation: "https://github.com/vmwarecloudadvocacy/acme_fitness_demo/"
    version: "1.0.0-K8s"
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayRouteConfig
metadata:
  name: cart-route-config
spec:
  service:
    name: cart
    port: 5000
  routes:
    - predicates:
        - Path=/cart/item/add/{userId}
        - Method=POST
      filters:
        - StripPrefix=0
      tags:
        - cart
    - predicates:
        - Path=/cart/item/modify/{userId}
        - Method=POST
      filters:
        - StripPrefix=0
      tags:
        - cart
    - predicates:
        - Path=/cart/items/{userId}
        - Method=GET
      filters:
        - StripPrefix=0
      tags:
        - cart
    - predicates:
        - Path=/cart/clear/{userId}
        - Method=GET
      filters:
        - StripPrefix=0
      tags:
        - cart
    - predicates:
        - Path=/cart/total/{userId}
        - Method=GET
      filters:
        - StripPrefix=0
      tags:
        - cart
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayMapping
metadata:
  name: cart-routes
spec:
  gatewayRef:
    name: gateway-acme
  routeConfigRef:
    name: cart-route-config

---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayRouteConfig
metadata:
  name: catalog-route-config
spec:
  service:
    name: catalog
    port: 8082
  routes:
    - predicates:
        - Path=/products
        - Method=GET
      filters:
        - StripPrefix=0
      tags:
        - catalog
    - predicates:
        - Path=/products/{id}
        - Method=GET
      filters:
        - StripPrefix=0
      tags:
        - catalog
    - predicates:
        - Path=/catalogliveness
        - Method=GET
      filters:
        - StripPrefix=0
        - SetPath=/liveness
      tags:
        - catalog
    - predicates:
        - Path=/static/images/{id}
        - Method=GET
      filters:
        - StripPrefix=0
      tags:
        - catalog
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayMapping
metadata:
  name: catalog-routes
spec:
  gatewayRef:
    name: gateway-acme
  routeConfigRef:
    name: catalog-route-config

---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayRouteConfig
metadata:
  name: order-route-config
spec:
  service:
    name: order
    port: 6000
  routes:
    - predicates:
        - Path=/order/add/{userId}
        - Method=POST
      filters:
        - StripPrefix=0
      tags:
        - order
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayMapping
metadata:
  name: order-routes
spec:
  gatewayRef:
    name: gateway-acme
  routeConfigRef:
    name: order-route-config

---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayRouteConfig
metadata:
  name: users-route-config
spec:
  service:
    name: users
    port: 8083
  routes:
    - predicates:
        - Path=/login
        - Method=POST
      filters:
        - StripPrefix=0
      tags:
        - users
      model:
        requestBody:
          description: Authenticate and Login user. The payload to a valid response contains an `access_token` which is used to make requests to other services to get data. The `refresh_token` is used to request new `access_token`. If both `refresh_token` and `access_token` expire, then the user needs to log back in again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
    - predicates:
        - Path=/users/{id}
        - Method=GET
      filters:
        - StripPrefix=0
      tags:
        - users
    - predicates:
        - Path=/users/logout
        - Method=POST
      filters:
        - StripPrefix=1
      tags:
        - users
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayMapping
metadata:
  name: users-routes
spec:
  gatewayRef:
    name: gateway-acme
  routeConfigRef:
    name: users-route-config
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayRouteConfig
metadata:
  name: frontend-route-config
spec:
  service:
    name: frontend
    port: 80
  routes:
    - predicates:
        - Path=/**
        - Method=GET
      order: 1000
      filters:
        - StripPrefix=0
      tags:
        - frontend
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayMapping
metadata:
  name: frontend-routes
spec:
  gatewayRef:
    name: gateway-acme
  routeConfigRef:
    name: frontend-route-config